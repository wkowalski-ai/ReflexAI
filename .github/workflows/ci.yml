
name: CI/CD Pipeline

# Uruchomienie na push do main i pull request
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Job 1: Testy jednostkowe
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install psycopg2-binary
        pip install ".[dev]"
    
    - name: Run tests
      run: |
        pytest tests/ -v
    
    - name: Check code quality
      run: |
        # Sprawdzenie skÅ‚adni Python
        python -m py_compile src/refleks_ai/main.py
        python -m py_compile src/refleks_ai/models/*.py
        python -m py_compile src/refleks_ai/routers/*.py

  # Job 2: Sprawdzenie bezpieczeÅ„stwa
  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install security tools
      run: |
        pip install safety bandit
    
    - name: Check for security vulnerabilities
      run: |
        # Sprawdzenie znanych luk w zaleÅ¼noÅ›ciach
        safety check || true
        # Sprawdzenie kodu pod kÄ…tem bezpieczeÅ„stwa
        bandit -r src/ -f json -o bandit-report.json || true
    
    - name: Upload security report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-report
        path: bandit-report.json

  # Job 3: Sprawdzenie migracji bazy danych
  database:
    runs-on: ubuntu-latest
    needs: test
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: test_refleks_ai
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install psycopg2-binary
        pip install ".[dev]"
    
    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432 -U postgres; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done
    
    - name: Test database migrations
      env:
        DATABASE_URL: postgresql://postgres:testpassword@localhost:5432/test_refleks_ai
      run: |
        # Sprawdzenie czy migracje dziaÅ‚ajÄ…
        alembic upgrade head
        alembic downgrade base
        alembic upgrade head

  # Job 4: Informacja o sukcesie
  success:
    runs-on: ubuntu-latest
    needs: [test, security, database]
    if: success()
    
    steps:
    - name: Success notification
      run: |
        echo "âœ… Wszystkie testy przeszÅ‚y pomyÅ›lnie!"
        echo "âœ… Sprawdzenia bezpieczeÅ„stwa zakoÅ„czone"
        echo "âœ… Migracje bazy danych dziaÅ‚ajÄ… prawidÅ‚owo"
        echo "ðŸš€ Aplikacja jest gotowa do wdroÅ¼enia"
